/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { Badge, Tooltip, Avatar, Alert, Radio, FormControlLabel, Checkbox } from '@mui/material';
import { Helmet } from 'react-helmet';
import Avatar1Image from 'src/assets/images/Frame4_Avatar.png';
import { styled } from '@mui/material/styles';
import Frame5Image from 'src/assets/images/Frame4_Frame_5.png';
import Frame11 from 'src/components/Frame11/Frame11';
import { animated, useSpring, easings } from 'react-spring';
import useFrame4 from 'src/components/Frame4/useFrame4';
 
const Frame41 = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: "100%",  
  height: "100%",  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
});
  
const Frame5 = styled("div")({  
  backgroundImage: `url(${Frame5Image})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  display: `flex`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  width: `119px`,  
  height: `101px`,  
  overflow: `hidden`,  
});
  
const Frame5Wrapper = styled("div")({  
  isolation: `isolate`,  
  position: `absolute`,  
  top: `16px`,  
  left: `40px`,  
});
  
const Frame111 = animated(styled(Frame11)(({ theme }) =>({  
  width: `169px`,  
  height: `141px`,  
  position: `absolute`,  
  left: `16px`,  
  top: `196px`,  
})));
  
const Frame13 = styled("div")({  
  backgroundColor: `rgba(0, 0, 0, 1)`,  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `190px`,  
  height: `104px`,  
  left: `185px`,  
  top: `13px`,  
  overflow: `hidden`,  
});
  
const Text = styled("div")({  
  textAlign: `center`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(211, 126, 126, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Advent Pro`,  
  fontWeight: `400`,  
  fontSize: `20px`,  
  letterSpacing: `0.14000000059604645px`,  
  textDecoration: `none`,  
  lineHeight: `20px`,  
  textTransform: `none`,  
  position: `absolute`,  
  left: `65px`,  
  top: `46px`,  
});
  
const Avatar1 = styled(Avatar)({  
  position: `absolute`,  
  left: `185px`,  
  top: `139px`,  
  width: `40px`,  
  height: `40px`,  
});
  
const AlertFilled = animated(styled(Alert)({  
  width: `320px`,  
  position: `absolute`,  
  left: `250px`,  
  top: `139px`,  
}));
  
const FormControlLabel1 = styled(FormControlLabel)({  
  position: `absolute`,  
  left: `168px`,  
  top: `233px`,  
  margin: `0px`,  
});
  
const FormControlLabel2 = styled(FormControlLabel)({  
  position: `absolute`,  
  left: `25px`,  
  top: `145px`,  
  margin: `0px`,  
});
 
function Frame4(props) {
  const {data} = useFrame4();
  
  
  const [Frame111Spring, Frame111Api] = useSpring(() => ({
    config: {
      duration: 250,
      easing: easings['easeOutExpo']
    },
    delay: 0,
    from: { opacity: 1  },
  }));

  const [AlertFilledSpring, AlertFilledApi] = useSpring(() => ({
    config: {
      duration: 250,
      easing: easings['easeOutExpo']
    },
    delay: 0,
    from: { opacity: 1  },
  }));
  return (
    <Frame41  className={props.className}    aria-labelledby={"201"} >
      <Helmet>
        <title>Quest Docs</title>
        <meta name='description' content='The easiest way to build the front end for your enterprise application starts here' />
      </Helmet>
      <Frame5Wrapper id={"200"} aria-label={"testing"}>
        <Badge  anchorOrigin={{vertical: 'top', horizontal: 'right'}} color={primary} variant={"standard"} badgeContent={200}>
        <Frame5 id={"200"}   aria-label={data.something} >
        </Frame5>
      </Badge>
      </Frame5Wrapper>
      <Frame111   onClick={() => {  Frame111Api.start({ ...{ opacity: 0  }, delay: 0 });  }}  style={{ ...Frame111Spring }}/>
      <Tooltip id={500} arrow={true} placement={"top"} componentsProps={{ tooltip: { sx: { maxWidth: "300px", }, } }} title={"jel"}>
        <Frame13 id={"2002"}   aria-describedby={201} >
          <Text >
            {`Text`}
              </Text>
        </Frame13>
      </Tooltip>
        <Avatar1 id={"2003"}  variant="rounded" src={Avatar1Image} alt={"Avatar"}   />
      <AlertFilled id={"2004"}  onClick={() => {  AlertFilledApi.start({ ...{ opacity: 0  }, delay: 0 });  }} variant="filled" severity={"info"}    style={{ ...AlertFilledSpring }}> Alert content </AlertFilled>
      <FormControlLabel1  control={<Radio id={"405"}  color="primary" size="medium" inputProps={{"aria-label": 'test200'}} />} label={"Label"} />
      <FormControlLabel2 disabled={false} control={<Checkbox disabled={false} defaultChecked={true} size="medium" color="primary" inputProps={{"aria-label": "testing"}} />} label={"Hello"} />
    </Frame41>
  );
}

export default Frame4;
