/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { animated, useSpring, easings } from 'react-spring';
import useMeetingListItem from 'src/components/MeetingListItem/useMeetingListItem';
 
const AlertFalseHoverTrueS = animated(styled("div", {
    shouldForwardProp: prop => !["data"].includes(prop.toString())
    })(({ theme, data }) =>({  
  backgroundColor: data.currentVariant === 'AlertFalseHoverFalseSelectedFalseTypeQuest' ? theme.palette["Action"]["Hover (4p)"] : data.currentVariant === 'AlertFalseHoverFalseSelectedTrueTypeQuest' ? theme.palette["Primary"]["Shades"]["12p"] : data.currentVariant === 'AlertTrueHoverTrueSelectedTrueTypeQuest' ? theme.palette["Error"]["Shades"]["12p"] : theme.palette["Primary"]["Contrast"],  
  boxShadow: `inset 0px -1px 0px rgba(172, 172, 172, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: "100%",  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `12px`,  
  boxSizing: `border-box`,  
  height: `62px`,  
})));
  
const Frame1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const ImportantAppointment = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0.15000000596046448px`,  
  textDecoration: `none`,  
  lineHeight: `142.99999475479126%`,  
  textTransform: `none`,  
  flexGrow: `1`,  
  margin: `0px`,  
}));
  
const Q930Am945Am = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `12px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `16px`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `2px 0px 0px 0px`,  
}));
 
function MeetingListItem(props) {
  const {data, fns} = useMeetingListItem();
  
  
  const AlertFalseHoverTrueSAlertFalseHoverTrueSelectedFalseTypeQuest = { }
  const AlertFalseHoverTrueSAlertFalseHoverFalseSelectedFalseTypeQuest = { }
  const AlertFalseHoverTrueSAlertFalseHoverFalseSelectedTrueTypeQuest = { }
  const AlertFalseHoverTrueSAlertTrueHoverTrueSelectedTrueTypeQuest = { }
  const [AlertFalseHoverTrueSStateStyles, AlertFalseHoverTrueSStateApi] = useSpring(() => ({ from: eval('AlertFalseHoverTrueS' + data.currentVariant), config: { duration: 1000 }, delay: 500 }))

  const switchStateToAlertFalseHoverTrueSelectedFalseTypeQuest = (duration = 0, delay = 0, easing = 'linear') => {
    AlertFalseHoverTrueSStateApi.start({ ...AlertFalseHoverTrueSAlertFalseHoverTrueSelectedFalseTypeQuest, delay, config: { duration, easing: easings[easing] } })
  };

  const switchStateToAlertFalseHoverFalseSelectedFalseTypeQuest = (duration = 0, delay = 0, easing = 'linear') => {
    AlertFalseHoverTrueSStateApi.start({ ...AlertFalseHoverTrueSAlertFalseHoverFalseSelectedFalseTypeQuest, delay, config: { duration, easing: easings[easing] } })
  };

  const switchStateToAlertFalseHoverFalseSelectedTrueTypeQuest = (duration = 0, delay = 0, easing = 'linear') => {
    AlertFalseHoverTrueSStateApi.start({ ...AlertFalseHoverTrueSAlertFalseHoverFalseSelectedTrueTypeQuest, delay, config: { duration, easing: easings[easing] } })
  };

  const switchStateToAlertTrueHoverTrueSelectedTrueTypeQuest = (duration = 0, delay = 0, easing = 'linear') => {
    AlertFalseHoverTrueSStateApi.start({ ...AlertFalseHoverTrueSAlertTrueHoverTrueSelectedTrueTypeQuest, delay, config: { duration, easing: easings[easing] } })
  };
  return (
    <AlertFalseHoverTrueS  className={props.className}   data={data}  style={{ ...AlertFalseHoverTrueSStateStyles }}>
      <Frame1 >
        {(data.isVisible) &&
          <ImportantAppointment  onClick={() => {  switchStateToAlertFalseHoverFalseSelectedTrueTypeQuest(3000, 3000, 'easeOutQuart'); fns.setCurrentVariant("AlertFalseHoverFalseSelectedTrueTypeQuest");  }}>
            {`Important Appointment `}
              </ImportantAppointment>
        }
      </Frame1>
      <Q930Am945Am >
        {`9:30 AM - 9:45 AM`}
          </Q930Am945Am>
    </AlertFalseHoverTrueS>
  );
}

export default MeetingListItem;
