/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import Ellipse1Image from 'src/assets/images/MovieDetailsPage_Ellipse_1.png';
import Polygon1Image from 'src/assets/images/MovieDetailsPage_Polygon_1.png';
import VectorImage from 'src/assets/images/MovieDetailsPage_Vector.svg';
import RtIconImage from 'src/assets/images/MovieDetailsPage_rt_icon.png';
import { styled } from '@mui/material/styles';
import MovieImage1Image from 'src/assets/images/MovieDetailsPage_movie_image.png';
import MoviePosterImage from 'src/assets/images/MovieDetailsPage_Movie_Poster_1.png';
import MoviePoster1Image from 'src/assets/images/MovieDetailsPage_Movie_Poster.png';
import MovieNavbar from 'src/components/MovieNavbar/MovieNavbar';
import TabDesktopBtn1 from 'src/components/TabDesktopBtn1/TabDesktopBtn1';
import TabDesktopBtn2 from 'src/components/TabDesktopBtn2/TabDesktopBtn2';
import TabMobileBtn1 from 'src/components/TabMobileBtn1/TabMobileBtn1';
import TabMobileBtn2 from 'src/components/TabMobileBtn2/TabMobileBtn2';
import Rated from 'src/components/Rated/Rated';
import Language from 'src/components/Language/Language';
import Genre from 'src/components/Genre/Genre';
import MovieCard from 'src/components/MovieCard/MovieCard';
import MovieFooter from 'src/components/MovieFooter/MovieFooter';
import { animated, useSpring, easings } from 'react-spring';

 
const ScreenMobile = styled("div")(({ theme }) =>({  
  backgroundColor: theme.palette["Background"]["Default"],  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: "100%",  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
  height: "auto",  
}));
  
const MovieNavbar1 = styled(MovieNavbar)(({ theme }) =>({  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const TrailerDialog = styled("div")({  
  backgroundColor: `rgba(0, 0, 0, 1)`,  
  boxShadow: `0px 4px 4px rgba(0, 0, 0, 0.25)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `196px`,  
  width: `340px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const IframeHolder = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  boxShadow: `0px 3.71098256111145px 3.71098256111145px rgba(0, 0, 0, 0.25)`,  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  width: `321px`,  
  height: `180.56px`,  
  left: `10px`,  
  top: `7px`,  
});
  
const TopAndMask = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Top = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const MovieImage = styled("div")({  
  backgroundColor: `rgba(0, 0, 0, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px 10px 10px 10px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  height: `216px`,  
  margin: `0px`,  
});
  
const MovieImage1 = styled("div")({  
  backgroundImage: `url(${MovieImage1Image})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  borderRadius: `6px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px 10px`,  
  boxSizing: `border-box`,  
  width: `350px`,  
  height: `165px`,  
  zIndex: `2`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const PlayMovieIcon = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `62px`,  
  height: `62px`,  
  margin: `0px`,  
});
  
const Ellipse1 = styled("img")({  
  height: `64px`,  
  width: `64px`,  
  position: `absolute`,  
  left: `-2px`,  
  top: `-3px`,  
});
  
const Polygon1 = styled("img")({  
  height: `32px`,  
  width: `25px`,  
  position: `absolute`,  
  left: `21px`,  
  top: `13px`,  
});
  
const TitleDarkened = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  zIndex: `1`,  
  left: `0px`,  
  top: `0px`,  
});
  
const TitleMask = styled("div")({  
  background: `linear-gradient(39.69deg, rgba(0, 0, 0, 1) 1.244188344165035%, rgba(0, 0, 0, 0) 47.14643601850167%)`,  
  height: `402px`,  
  width: `638px`,  
  margin: `0px`,  
});
  
const TitleAndBuy = styled("div")({  
  display: `flex`,  
  position: `absolute`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-end`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `320px`,  
  zIndex: `0`,  
  left: `30px`,  
  top: `84px`,  
});
  
const MoviePoster = styled("div")({  
  backgroundImage: `url(${MoviePosterImage})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  height: `140px`,  
  width: `94px`,  
  margin: `0px`,  
});
  
const MovieTitle = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `45px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `24px 0px 0px 0px`,  
});
  
const Tabs = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `24px 0px 0px 0px`,  
});
  
const TabDesktopBtn11 = styled(TabDesktopBtn1)(({ theme }) =>({  
  width: `112px`,  
  margin: `0px`,  
}));
  
const TabDesktopBtn21 = styled(TabDesktopBtn2)(({ theme }) =>({  
  width: `132px`,  
  margin: `0px`,  
}));
  
const ContentAndMask = styled("div")(({ theme }) =>({  
  backgroundColor: theme.palette["Background"]["Default"],  
  borderRadius: `20px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `-40px 0px 0px 0px`,  
  overflow: `hidden`,  
}));
  
const RoundedMask = styled("div")(({ theme }) =>({  
  backgroundColor: theme.palette["Background"]["Default"],  
  borderRadius: `20px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  alignSelf: `stretch`,  
  height: `54px`,  
  margin: `0px`,  
}));
  
const PageContent = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px 24px 60px 24px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `-30px 0px 0px 0px`,  
});
  
const Top1 = styled("div")(({ theme }) =>({  
  backgroundColor: theme.palette["Text"]["Primary Shades"]["4p"],  
  borderRadius: `10px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `20px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  zIndex: `2`,  
  margin: `0px`,  
}));
  
const TopPart = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const PageTop = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TitleAndBuy1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TitleMobile = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const MoviePoster1 = styled("div")({  
  backgroundImage: `url(${MoviePoster1Image})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  width: `56px`,  
  height: `83px`,  
  margin: `0px`,  
});
  
const MovieTitle1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `24px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  width: `244px`,  
  margin: `0px 0px 0px 16px`,  
}));
  
const Tabs1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `18px 0px 0px 0px`,  
});
  
const TabMobileBtn11 = styled(TabMobileBtn1)(({ theme }) =>({  
  width: `112px`,  
  margin: `0px`,  
}));
  
const TabMobileBtn21 = styled(TabMobileBtn2)(({ theme }) =>({  
  width: `132px`,  
  margin: `0px`,  
}));
  
const RateAndRun = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `34px 0px 0px 0px`,  
});
  
const RatingLang = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Rated1 = styled(Rated)(({ theme }) =>({  
  margin: `0px`,  
}));
  
const Language1 = styled(Language)(({ theme }) =>({  
  width: `90px`,  
  margin: `0px 0px 0px 14px`,  
}));
  
const RunRelease = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `18px 0px 0px 0px`,  
});
  
const RunTime = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Vector = styled("img")({  
  height: `auto`,  
  width: `13px`,  
  margin: `0px`,  
});
  
const Q120Min = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Disabled"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 2px`,  
}));
  
const ReleaseDate = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `center`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 19px`,  
});
  
const Released = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const Q01Oct2010 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Disabled"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 2px`,  
}));
  
const Reviews = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `34px 0px 0px 0px`,  
});
  
const RatingImdb = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Q6810 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `18px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const ImDb = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Disabled"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `2px 0px 0px 0px`,  
}));
  
const RtIcon = styled("img")({  
  height: `49px`,  
  width: `49px`,  
  objectFit: `cover`,  
  margin: `0px 0px 0px 26px`,  
});
  
const RatingRt = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 26px`,  
});
  
const Q72 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `18px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const RottenTomatoes = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Disabled"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `2px 0px 0px 0px`,  
}));
  
const RatingIgn = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 26px`,  
});
  
const Q610 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `18px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const Ign = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Disabled"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `2px 0px 0px 0px`,  
}));
  
const GenreChips = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `34px 0px 0px 0px`,  
});
  
const Genre1 = styled(Genre)(({ theme }) =>({  
  margin: `0px`,  
}));
  
const Genre2 = styled(Genre)(({ theme }) =>({  
  margin: `0px 0px 0px 12px`,  
}));
  
const TopPlot = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `10px 10px 10px 0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `34px 0px 0px 0px`,  
});
  
const Plot = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Color = styled("div")({  
  backgroundColor: `rgba(245, 74, 74, 1)`,  
  width: `7px`,  
  height: `30px`,  
  margin: `0px`,  
});
  
const Plot1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `40px`,  
  textTransform: `none`,  
  width: `100px`,  
  margin: `0px 0px 0px 10px`,  
}));
  
const MovieDescription = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `10px 0px 0px 0px`,  
}));
  
const Vids = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  zIndex: `1`,  
  margin: `38px 0px 0px 0px`,  
});
  
const MoreTrailersVideos = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(85, 85, 85, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `20px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `32px`,  
  textTransform: `none`,  
  width: `232px`,  
  margin: `0px`,  
}));
  
const TrailerCards = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `15px 0px 0px 0px`,  
});
  
const MovieCard1 = styled(MovieCard)(({ theme }) =>({  
  flexGrow: `1`,  
  height: `180px`,  
  margin: `0px`,  
}));
  
const MovieCard2 = styled(MovieCard)(({ theme }) =>({  
  flexGrow: `1`,  
  height: `180px`,  
  margin: `0px 0px 0px 20px`,  
}));
  
const MovieCard3 = styled(MovieCard)(({ theme }) =>({  
  flexGrow: `1`,  
  height: `180px`,  
  margin: `0px 0px 0px 20px`,  
}));
  
const MovieCard4 = styled(MovieCard)(({ theme }) =>({  
  flexGrow: `1`,  
  height: `180px`,  
  margin: `0px 0px 0px 20px`,  
}));
  
const MovieCard5 = styled(MovieCard)(({ theme }) =>({  
  flexGrow: `1`,  
  height: `180px`,  
  margin: `0px 0px 0px 20px`,  
}));
  
const PageBtm = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  zIndex: `0`,  
  margin: `38px 0px 0px 0px`,  
});
  
const Director = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `10px 10px 10px 0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Director1 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Color1 = styled("div")({  
  backgroundColor: `rgba(245, 74, 74, 1)`,  
  width: `7px`,  
  height: `22px`,  
  margin: `0px`,  
});
  
const Director2 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  width: `60px`,  
  margin: `0px 0px 0px 8px`,  
}));
  
const TaikaWaititi = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  margin: `0px 0px 0px 10px`,  
}));
  
const Actors = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `6px 10px 6px 0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `7px 0px 0px 0px`,  
});
  
const Actor = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Color2 = styled("div")({  
  backgroundColor: `rgba(245, 74, 74, 1)`,  
  width: `7px`,  
  height: `22px`,  
  margin: `0px`,  
});
  
const Actors1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  width: `60px`,  
  margin: `0px 0px 0px 8px`,  
}));
  
const ChrisHemsworthNatali = animated(styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 10px`,  
})));
  
const PlotBtm = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `10px 10px 10px 0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `7px 0px 0px 0px`,  
});
  
const Plot2 = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Color3 = styled("div")({  
  backgroundColor: `rgba(245, 74, 74, 1)`,  
  width: `7px`,  
  height: `22px`,  
  margin: `0px`,  
});
  
const Plot3 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  width: `60px`,  
  margin: `0px 0px 0px 8px`,  
}));
  
const MovieDescription1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Secondary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `400`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `22px`,  
  textTransform: `none`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 10px`,  
}));
  
const MovieFooter1 = styled(MovieFooter)(({ theme }) =>({  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
 
function MovieDetailsPage(props) {
  
  
  const [ChrisHemsworthNataliSpring, ChrisHemsworthNataliApi] = useSpring(() => ({
    config: {
      duration: 3000,
      easing: easings['easeOutExpo']
    },
    delay: 3000,
    from: { opacity: 1  },
  }));
  return (
    <ScreenMobile  className={props.className}   >
      <MovieNavbar1   />
      {false &&
        <TrailerDialog >
          <IframeHolder >
          </IframeHolder>
        </TrailerDialog>
      }
      <TopAndMask >
        <Top >
          <MovieImage >
            <MovieImage1 >
              <PlayMovieIcon >
                <Ellipse1  src={Ellipse1Image} alt={"Ellipse 1"}/>
                <Polygon1  src={Polygon1Image} alt={"Polygon 1"}/>
              </PlayMovieIcon>
            </MovieImage1>
            <TitleDarkened >
              <TitleMask >
              </TitleMask>
            </TitleDarkened>
            {false &&
              <TitleAndBuy >
                <MoviePoster >
                </MoviePoster>
                <MovieTitle >
                  {`Thor: Love and Thunder`}
                    </MovieTitle>
                <Tabs >
                  <TabDesktopBtn11   />
                  <TabDesktopBtn21   />
                </Tabs>
              </TitleAndBuy>
            }
          </MovieImage>
        </Top>
        <ContentAndMask >
          <RoundedMask >
          </RoundedMask>
          <PageContent >
            <Top1 >
              <TopPart >
                <PageTop >
                  <TitleAndBuy1 >
                    <TitleMobile >
                      <MoviePoster1 >
                      </MoviePoster1>
                      <MovieTitle1 >
                        {`Thor: Love and Thunder`}
                          </MovieTitle1>
                    </TitleMobile>
                    <Tabs1 >
                      <TabMobileBtn11   />
                      <TabMobileBtn21   onClick={() => {  ChrisHemsworthNataliApi.start({ ...{ opacity: 0.55  }, delay: 3000 });  }} />
                    </Tabs1>
                  </TitleAndBuy1>
                </PageTop>
                <RateAndRun >
                  <RatingLang >
                    <Rated1   />
                    <Language1   />
                  </RatingLang>
                  <RunRelease >
                    <RunTime >
                      <Vector  src={VectorImage} alt={"Vector"}/>
                      <Q120Min >
                        {`120 min`}
                          </Q120Min>
                    </RunTime>
                    <ReleaseDate >
                      <Released >
                        {`Released:`}
                          </Released>
                      <Q01Oct2010 >
                        {`01 Oct 2010`}
                          </Q01Oct2010>
                    </ReleaseDate>
                  </RunRelease>
                </RateAndRun>
                <Reviews >
                  <RatingImdb >
                    <Q6810 >
                      {`6.8/10`}
                        </Q6810>
                    <ImDb >
                      {`IMDb`}
                        </ImDb>
                  </RatingImdb>
                  {false &&
                    <RtIcon  src={RtIconImage} alt={"rt_icon"}/>
                  }
                  <RatingRt >
                    <Q72 >
                      {`72%`}
                        </Q72>
                    <RottenTomatoes >
                      {`Rotten Tomatoes`}
                        </RottenTomatoes>
                  </RatingRt>
                  <RatingIgn >
                    <Q610 >
                      {`6/10`}
                        </Q610>
                    <Ign >
                      {`IGN`}
                        </Ign>
                  </RatingIgn>
                </Reviews>
                <GenreChips >
                  <Genre1   />
                  <Genre2   />
                </GenreChips>
              </TopPart>
              {false &&
                <TopPlot >
                  <Plot >
                    <Color >
                    </Color>
                    <Plot1 >
                      {`Plot`}
                        </Plot1>
                  </Plot>
                  <MovieDescription >
                    {`After his retirement is interrupted by Gorr the God Butcher, a galactic killer who seeks the extinction of the gods, Thor Odinson enlists the help of King Valkyrie, Korg, and ex-girlfriend Jane Foster, who now wields Mjolnir as the Mighty Thor. Together they embark upon a harrowing cosmic adventure to uncover the mystery of the God Butcher’s vengeance and stop him before it’s too late.`}
                      </MovieDescription>
                </TopPlot>
              }
            </Top1>
            <Vids >
              <MoreTrailersVideos >
                {`More Trailers & Videos`}
                  </MoreTrailersVideos>
              <TrailerCards >
                <MovieCard1   />
                <MovieCard2   />
                <MovieCard3   />
                <MovieCard4   />
                <MovieCard5   />
              </TrailerCards>
            </Vids>
            <PageBtm >
              <Director >
                <Director1 >
                  <Color1 >
                  </Color1>
                  <Director2 >
                    {`Director`}
                      </Director2>
                </Director1>
                <TaikaWaititi >
                  {`Taika Waititi`}
                    </TaikaWaititi>
              </Director>
              <Actors >
                <Actor >
                  <Color2 >
                  </Color2>
                  <Actors1 >
                    {`Actors`}
                      </Actors1>
                </Actor>
                <ChrisHemsworthNatali  style={{ ...ChrisHemsworthNataliSpring }}>
                  {`Chris Hemsworth, Natalie Portman, Christian Bale, `}
                    </ChrisHemsworthNatali>
              </Actors>
              <PlotBtm >
                <Plot2 >
                  <Color3 >
                  </Color3>
                  <Plot3 >
                    {`Plot`}
                      </Plot3>
                </Plot2>
                <MovieDescription1 >
                  {`After his retirement is interrupted by Gorr the God Butcher, a galactic killer who seeks the extinction of the gods, Thor Odinson enlists the help of King Valkyrie, Korg, and ex-girlfriend Jane Foster, who now wields Mjolnir as the Mighty Thor. Together they embark upon a harrowing cosmic adventure to uncover the mystery of the God Butcher’s vengeance and stop him before it’s too late.`}
                    </MovieDescription1>
              </PlotBtm>
            </PageBtm>
          </PageContent>
        </ContentAndMask>
      </TopAndMask>
      <MovieFooter1   />
    </ScreenMobile>
  );
}

export default MovieDetailsPage;
